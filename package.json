{
  "name": "thinkdrop-ai",
  "version": "1.0.0",
  "description": "Intelligent screen/audio overlay assistant with n8n-powered agent orchestration",
  "main": "src/main/main.cjs",
  "type": "module",
  "homepage": "./",
  "scripts": {
    "dev": "concurrently \"npm run dev:main\" \"npm run dev:renderer\"",
    "dev:main": "nodemon --exec electron src/main/main.cjs",
    "dev:renderer": "vite",
    "demo": "node demo.js",
    "test-system": "node test-system.js",
    "build": "npm run build:renderer && npm run build:main",
    "build:renderer": "vite build",
    "build:main": "electron-builder",
    "test": "jest",
    "lint": "eslint src/",
    "format": "prettier --write src/",
    "test:conv:detect": "node tests/test_conversational_detection.js",
    "test:conv:retrieve": "node tests/test_conversational_retrieval.js",
    "test:conv:extra": "node tests/test_conversational_detection_extra.js",
    "test:conv:all": "npm run -s test:conv:detect && npm run -s test:conv:extra && npm run -s test:conv:retrieve",
    "start:services": "./scripts/start-all-services.sh",
    "stop:services": "./scripts/stop-all-services.sh",
    "restart:services": "./scripts/stop-all-services.sh && ./start-all-services.sh",
    "db:clean:wal": "./scripts/clean-wal.sh"
  },
  "keywords": [
    "electron",
    "ai",
    "overlay",
    "assistant",
    "n8n",
    "agents",
    "automation"
  ],
  "author": "Thinkdrop AI Team",
  "license": "MIT",
  "workspaces": [
    "mcp-services/*"
  ],
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.0.0",
    "concurrently": "^8.0.0",
    "electron": "^28.0.0",
    "electron-builder": "^24.0.0",
    "electron-rebuild": "^3.2.9",
    "eslint": "^8.0.0",
    "jest": "^29.0.0",
    "nodemon": "^3.0.0",
    "prettier": "^3.0.0",
    "typescript": "^5.8.3",
    "vite": "^5.0.0"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.9.0",
    "@google-cloud/speech": "^6.0.0",
    "@google/generative-ai": "^0.1.0",
    "@mistralai/mistralai": "^0.1.0",
    "@nut-tree-fork/nut-js": "^4.2.6",
    "@pinecone-database/pinecone": "^1.1.0",
    "@playwright/mcp": "^0.0.36",
    "@preact/signals-react": "^3.2.1",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@tailwindcss/forms": "^0.5.0",
    "@tensorflow-models/universal-sentence-encoder": "^1.3.3",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-node": "^4.22.0",
    "@xenova/transformers": "^2.17.2",
    "autoprefixer": "^10.4.0",
    "axios": "^1.6.0",
    "class-variance-authority": "^0.7.1",
    "clipboard-event": "^1.0.0",
    "clsx": "^2.1.1",
    "compromise": "^14.14.4",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dotenv": "^16.3.0",
    "duckdb": "latest",
    "electron-store": "^8.1.0",
    "express": "^4.18.0",
    "express-rate-limit": "^7.1.0",
    "helmet": "^7.1.0",
    "katex": "^0.16.22",
    "lucide-react": "^0.525.0",
    "marked": "^9.1.0",
    "natural": "^8.1.0",
    "node-cron": "^3.0.0",
    "node-record-lpcm16": "^1.0.1",
    "node-screenshots": "^0.2.1",
    "openai": "^4.20.0",
    "playwright": "^1.54.0",
    "postcss": "^8.4.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-markdown": "^10.1.0",
    "redis": "^4.6.0",
    "rehype-katex": "^7.0.1",
    "remark-breaks": "^4.0.0",
    "remark-gfm": "^4.0.1",
    "remark-math": "^6.0.0",
    "screenshot-desktop": "^1.15.1",
    "shiki": "^3.12.2",
    "socket.io": "^4.7.0",
    "socket.io-client": "^4.7.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.3.0",
    "tailwindcss-animate": "^1.0.7",
    "tesseract.js": "^6.0.1",
    "winston": "^3.11.0",
    "ws": "^8.14.0"
  },
  "build": {
    "appId": "com.thinkdrop.ai",
    "productName": "Thinkdrop AI",
    "directories": {
      "output": "dist"
    },
    "files": [
      "src/main/**/*",
      "dist-renderer/**/*",
      "node_modules/**/*"
    ],
    "mac": {
      "category": "public.app-category.productivity",
      "target": "dmg"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": "AppImage"
    }
  }
}
